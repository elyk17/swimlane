export default{
    //general
    general_neader: () => cy.get('ngx-tabs', {timeout: 10000}).find('section').find('ul').find('li').eq(0).find('button').contains('General'),
    username: () => cy.get('ngx-input', {timeout: 10000}).find('div').find('div').find('div').find('div').find('[id="userName"]'),
    display_name_header: () => cy.get('[class="user-displayname"]', {timeout: 10000}),
    avatar: () => cy.get('user-avatar').find('img'),
    upload_pic: () => cy.get('[class="ngx-file-button-input"]', {timeout: 10000}),
    display_name: () => cy.get('ngx-input', {timeout: 10000}).eq(1).find('div').find('div').find('div').find('div').find('input'),
    email_address: () => cy.get('ngx-input', {timeout: 10000}).eq(2).find('div').find('div').find('div').find('div').find('input'),
    first_name: () => cy.get('ngx-input').eq(3).find('div').find('div').find('div').find('div').find('input'),
    middle_initial: () => cy.get('ngx-input').eq(4).find('div').find('div').find('div').find('div').find('input'),
    last_name: () => cy.get('ngx-input').eq(5).find('div').find('div').find('div').find('div').find('input'),
    phone_number: () => cy.get('ngx-input').eq(6).find('div').find('div').find('div').find('div').find('input'),
    time_zone: () => cy.get('ngx-select-input', {timeout: 10000}).find('div').eq(0).find('ul').find('li').find('span'),
    select_time_zone: (name = {}) => cy.get('ngx-select-dropdown', {timeout: 10000}).find('div').find('ul').find('li').contains(name),
    dashboard: (name = {}) => cy.get('ngx-select-input', {timeout: 10000}).find('div').find('label').find('span').contains(name),
    save_button: () => cy.get('state-save-button', {timeout: 10000}).find('ngx-button'),
    disabled_save_button: () => cy.get('ngx-button.btn.ngx-button.btn-primary.disabled-button', {timeout: 10000}),
    user_updated: () => cy.get('ngx-notification', {timeout: 10000}).find('div').find('div').find('p').contains('User updated'),
    
    //password
    password_header: () => cy.get('ngx-tabs', {timeout: 10000}).find('section').find('ul').find('li').eq(1).find('button').contains('Password'),
    current_password:  () => cy.get('ngx-input', {timeout: 10000}).eq(7).find('div').find('div').find('div').find('div').find('input'),
    new_password:  () => cy.get('ngx-input', {timeout: 10000}).eq(8).find('div').find('div').find('div').find('div').find('input'),
    confirm_new_password:  () => cy.get('ngx-input', {timeout: 10000}).eq(9).find('div').find('div').find('div').find('div').find('input'),
    not_current_password_passed: () => cy.get('[class="not-passed ng-star-inserted passed"]', {timeout: 10000}).find('[class="message"]',{timeout: 10000}).contains('Cannot be the same as your current password.'),
    not_current_password_not_passed: () => cy.get('[class="not-passed ng-star-inserted"]', {timeout: 10000}),
    minimum_characters_passed: () => cy.get('[class="not-passed passed"]', {timeout: 10000}).find('[class="message"]', {timeout: 10000}).contains('Must be a minimum of 6 characters.'),
    minimum_characters_not_passed: () => cy.get('[class="not-passed"]', {timeout: 10000}).find('[class="message"]', {timeout: 10000}).contains('Must be a minimum of 6 characters.'),
    complexity_level_requirement_passed: () => cy.get('[class="not-passed passed"]', {timeout: 10000}).find('[class="message"]').contains('Must match minimum complexity level requirements (level 0).'),
    complexity_level_requirement_not_passed: () =>  cy.get('[class="not-passed"]', {timeout: 10000}).find('[class="message"]').contains('Must match minimum complexity level requirements (level 0).'),
    must_match_password_not_passed: () => cy.get('[class="not-passed"]', {timeout: 10000}).find('[class="message"]', {timeout: 10000}).contains('Must match password confirmation.'),
    must_match_password_passed: () => cy.get('[class="not-passed passed"]', {timeout: 10000}).find('[class="message"]', {timeout: 10000}).contains('Must match password confirmation.'),
    update_password_button: () => cy.get('[class="user-password--update-button"]', {timeout: 10000}).find('ngx-button', {timeout: 10000}),
    invalid_password: () => cy.get('ngx-notification', {timeout: 10000}).find('div').find('div').find('p').contains('Invalid username/password'),
    password_updated: () => cy.get('ngx-notification', {timeout: 10000}).find('div').find('div').find('p').contains('Password updated'),
    
    //Authentication
    authentication_header: () => cy.get('[type="button"]', {timeout: 10000}).eq(2).contains('Authentication'),
    two_factor_authentication: () => cy.get('[class="user-2fa-container__label"]', {timeout: 10000}).find('span', {timeout: 10000}),
    enable_2fa: () => cy.get('ngx-button', {timeout: 10000}).find('button').find('span').contains(' Enable 2FA '),
    enable_2fa_label: () => cy.get('h1', {timeout: 10000}).contains('Enable Two-Factor Authentication'),
    mfa_modal: () => cy.get('multi-factor-authentication', {timeout: 10000}),
    notice_message: () => cy.get('multi-factor-authentication', {timeout: 10000}).find('div').find('div').eq(1).iopfind('div').find('div').contains('NOTICE! This is the only time you will see this QR code and secret key.'),
    qr_code: () => cy.get('[class="mfa__body__qr-code"]', {timeout: 10000}),
    message_1: () => cy.get('multi-factor-authentication', {timeout: 10000}).find('div').find('div').eq(1).find('ol').find('li').eq(0).contains(' Download a two-factor authentication app like '),
    message_2: () => cy.get('multi-factor-authentication', {timeout: 10000}).find('div').find('div').eq(1).find('ol').find('li').eq(1).contains(' Scan the QR Code, or enter the key below into your two-factor authentication app. '),
    message_3: () => cy.get('multi-factor-authentication', {timeout: 10000}).find('div').find('div').eq(1).find('ol').find('li').eq(2).contains(' After you scan the QR code or input the above key, your two-factor authentication app will provide you with a unique passcode. Enter that code below. '),
    mfa_code_1: () => cy.get('mfa-code-input', {timeout: 10000}).find('div').find('input').eq(0),
    mfa_code_2: () => cy.get('mfa-code-input', {timeout: 10000}).find('div').find('input').eq(1),
    mfa_code_3: () => cy.get('mfa-code-input', {timeout: 10000}).find('div').find('input').eq(2),
    mfa_code_4: () => cy.get('mfa-code-input', {timeout: 10000}).find('div').find('input').eq(3),
    mfa_code_5: () => cy.get('mfa-code-input', {timeout: 10000}).find('div').find('input').eq(4),
    mfa_code_6: () => cy.get('mfa-code-input', {timeout: 10000}).find('div').find('input').eq(5),
    //Note this message will change for different users and therefore throw errors when any other user is used. I would then recommend passing in the username into the string.
    invalid_mfa_error: () => cy.get('ngx-notification', {timeout: 10000}).find('div').eq(0).find('[class="notification-content has-icon"]').find('[class="ngx-notification-body"]').contains('Incorrect code provided for 2FA secret verification against User Kyle Martinez'),
    close_2FA: () => cy.get('button', {timeout: 10000}).find('[class="icon-x"]',{timeout: 10000}),
    
    //personal access token
    personal_access_token_header: () => cy.get('[type="button"]', {timeout: 10000}).eq(3).contains('Personal access token'),
    no_token_exists: () => cy.get('[class="user-pas--box__label"]', {timeout: 10000}).find('span').contains('No token exists'),
    generate_token: () => cy.get('[class="btn btn--bigger btn-bordered--grey ngx-button"]', {timeout: 10000}),
    token_enabled: () => cy.get('[class="user-pas--box__label__icon user-pas--box__label__icon--enabled"]', {timeout: 10000}),
    button_1: (name = {}) => cy.get('[class="user-pas--box__actions"]', {timeout: 10000}).find('ngx-button', {timeout: 10000}).eq(0).find('button', {timeout: 10000}).find('span', {timeout: 10000}).eq(0).contains(name).parent().parent(),
    button_2: (name = {})  => cy.get('[class="user-pas--box__actions"]', {timeout: 10000}).find('ngx-button', {timeout: 10000}).eq(1).find('button', {timeout: 10000}).find('span', {timeout: 10000}).eq(0).contains(name).parent().parent(),
    personal_access_token: () => cy.get('[class="user-pas--box__label"]', {timeout: 10000}).find('span',{timeout: 10000}),
    personal_access_code: () => cy.get('[class="user-pas--box__label"]', {timeout: 10000}),
    delete_pat_modal: () => cy.get('[class="confirm-delete-dialog ng-star-inserted"]', {timeout: 10000}),
    delete_pat_button: () => cy.get('ngx-long-press-button', {timeout: 10000}),
    main_message: () => cy.get('[class="maintext"]', {timeout: 10000}).contains('Delete personal access token.'),
    sub_message: () => cy.get('[class="subtext"]', {timeout: 10000}).contains('Click and hold button to confirm'),
    copied_to_clipboard_message: () => cy.get('ngx-notification', {timeout: 10000}).find('div').find('[class="notification-content has-icon"]').find('p').contains('Access token copied to clipboard'),
    close_delete_modal: () => cy.xpath('/html/body/view-container/ngx-dialog/div/div/button', {timeout: 10000}),
    deleted_pat_message: () => cy.xpath('/ngx-notification/div/div[3]/p', {timeout: 10000}).contains('Access token deleted'),
}       